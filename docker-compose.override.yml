version: "3"

services:
  bot:
    depends_on:
      - postgres
      - keydb
      - manager
      - lavalink
      - gateway-proxy
    build:
      context: .
      dockerfile: vibr/Dockerfile
    volumes:
      - ./logs:/bot/logs
      - /var/run/docker.sock:/var/run/docker.sock
    pull_policy: build
    environment:
      TOKEN: $TOKEN
      TOTAL_CLUSTERS: ${TOTAL_CLUSTERS:-1}
      LAVALINK_FILE: lavalink/alpha.nodes.yml
      DB_URI: postgresql://postgres:postgres@postgres:5432/bot
      GW_PROXY: ws://gateway-proxy:7878
      PROXY_HTTP: http://gateway-proxy:7878
      PASSWORD: $PASSWORD
      REDIS_URL: redis://keydb:6379
      SPOTIFY_CLIENT_ID: $SPOTIFY_CLIENT_ID
      SPOTIFY_CLIENT_SECRET: $SPOTIFY_CLIENT_SECRET
      OAUTH_SECRET_KEY: $OAUTH_SECRET_KEY
  gateway-proxy:
    image: ghcr.io/ooliver1/gateway-proxy:x86-64
    environment:
      TOKEN: $TOKEN
  postgres:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: bot
      PGDATA: /var/lib/postgresql/data/pgdata
  keydb:
    image: eqalpha/keydb
  manager:
    build:
      context: .
      dockerfile: manager/Dockerfile
    volumes:
      - ./logs:/manager/logs
    depends_on:
      - keydb
    pull_policy: build
    environment:
      REDIS_URL: redis://keydb:6379
  lavalink:
    image: ghcr.io/freyacodes/lavalink:v4
    volumes:
      - ./logs/lava:/opt/Lavalink/logs
    environment:
      JDK_JAVA_OPTIONS: -Xmx2G
      SERVER_PORT: 6969
      SERVER_ADDRESS: 0.0.0.0
      LAVALINK_SERVER_PASSWORD: $PASSWORD
      LAVALINK_SERVER_FRAME_BUFFER_DURATION: 5000
      LAVALINK_SERVER_RESAMPLING_QUALITY: LOW
      LAVALINK_SERVER_YOUTUBE_PLAYLIST_LOAD_LIMIT: 5
      LAVALINK_PLUGINS_0_DEPENDENCY: "com.github.TopiSenpai.LavaSrc:lavasrc-plugin:85b39d130692e0fb96c61f5ed518ad3c1e4eecd6"
      LAVALINK_PLUGINS_0_REPOSITORY: "https://jitpack.io"
      PLUGINS_LAVASRC_PROVIDERS_0: "dzisrc:%ISRC%"
      PLUGINS_LAVASRC_PROVIDERS_1: "dzsearch:%QUERY%"
      PLUGINS_LAVASRC_PROVIDERS_2: 'ytsearch:"%ISRC%"'
      PLUGINS_LAVASRC_PROVIDERS_3: "ytsearch:%QUERY%"
      PLUGINS_LAVASRC_SOURCES_SPOTIFY: true
      PLUGINS_LAVASRC_SOURCES_APPLEMUSIC: true
      PLUGINS_LAVASRC_SOURCES_DEEZER: true
      PLUGINS_LAVASRC_SOURCES_YANDEXMUSIC: false
      PLUGINS_LAVASRC_SPOTIFY_CLIENT_ID: $SPOTIFY_CLIENT_ID
      PLUGINS_LAVASRC_SPOTIFY_CLIENT_SECRET: $SPOTIFY_CLIENT_SECRET
      PLUGINS_LAVASRC_SPOTIFY_COUNTRY_CODE: US
      PLUGINS_LAVASRC_SPOTIFY_PLAYLIST_LOAD_LIMIT: 5
      PLUGINS_LAVASRC_SPOTIFY_ALBUM_LOAD_LIMIT: 10
      PLUGINS_LAVASRC_APPLE_MUSIC_PLAYLIST_LOAD_LIMIT: 2
      PLUGINS_LAVASRC_APPLE_MUSIC_ALBUM_LOAD_LIMIT: 2
      PLUGINS_LAVASRC_DEEZER_MASTER_DECRYPTION_KEY: $DEEZER_KEY
      # PLUGINS_LAVASRC_YANDEXMUSIC_ACCESSTOKEN: $YANDEX_TOKEN
      METRICS_PROMETHEUS_ENABLED: false
      LOGGING_FILE_PATH: ./logs/
      LOGGING_LEVEL_ROOT: INFO
      LOGGING_LEVEL_LAVALINK: INFO
      LOGGING_REQUEST_ENABLED: true
      LOGGING_LOGBACK_ROLLING_POLICY_MAX_FILE_SIZE: 100MB
      LOGGING_LOGBACK_ROLLING_POLICY_MAX_HISTORY: 30
  api:
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: api/Dockerfile
    pull_policy: build
    environment:
      SPOTIFY_CLIENT_ID: $SPOTIFY_CLIENT_ID
      SPOTIFY_CLIENT_SECRET: $SPOTIFY_CLIENT_SECRET
      OAUTH_SECRET_KEY: $OAUTH_SECRET_KEY
      DB_URI: postgresql://postgres:postgres@postgres:5432/bot
